** checking errors generated by recursive calls MEDIUM**

declare module mod1;
declare module mod2;

<<module mod1>>
takes input [K: array[1..20] of integer, B: boolean];
start
   declare f:boolean;
   declare a: array [1..20] of integer;
   declare b:integer;
   use module mod2 with parameters b;             ** No Error **
   while(b>=0)
   start
        declare while_var: real;
        use module mod1 with parameters a,f;      ** Error :- Recursive call **
        while (a >= 1)
        start
            use module mod1 with parameters a; ** Error :- Recursive **
            for (a in 1..10)
            start
                declare FOR_VAR: boolean;
                declare FOR_VAR2: integer;
                declare FOR_VAR3: array[1..20] of real;
                use module mod1 with parameters a; ** Error :- Recursive **
                use module mod2 with parameters a; ** Fine **
                use module mod2 with parameters FOR_VAR2; ** Fine **
                use module mod2 with parameters FOR_VAR3; ** Error - parameter **
            end
        end
        b := b-1;
   end
end

<<module mod2>>
takes input [x:integer];
start

end

<<<driver program>>>
start
   declare list1: array[1..20] of integer;
   declare b:boolean;
   use module mod1 with parameters list1,b;
end